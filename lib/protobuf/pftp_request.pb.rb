#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'types.pb'; rescue LoadError; end

module PolarProtocol
  # forward declarations
  class PbPFtpOperation < ::ProtocolBuffers::Message; end
  class PbPFtpSetSystemTimeParams < ::ProtocolBuffers::Message; end
  class PbPFtpSetLocalTimeParams < ::ProtocolBuffers::Message; end
  class PbPFtpGenerateChallengeTokenParams < ::ProtocolBuffers::Message; end
  class PbPFtpSetAdbModeParams < ::ProtocolBuffers::Message; end
  class PbPFtpCleanupDiskSpaceParams < ::ProtocolBuffers::Message; end

  # enums
  module PbPFtpQuery
    include ::ProtocolBuffers::Enum

    set_fully_qualified_name "polar_protocol.PbPFtpQuery"

    IDENTIFY_DEVICE = 0
    SET_SYSTEM_TIME = 1
    GET_SYSTEM_TIME = 2
    SET_LOCAL_TIME = 3
    GET_LOCAL_TIME = 4
    GET_DISK_SPACE = 5
    GENERATE_CHALLENGE_TOKEN = 6
    SET_INTERNAL_TEST = 7
    GET_BATTERY_STATUS = 8
    SET_ADB_MODE = 9
    CLEANUP_DISK_SPACE = 10
    GET_INACTIVITY_PRE_ALERT = 11
  end

  class PbPFtpOperation < ::ProtocolBuffers::Message
    # forward declarations

    # enums
    module Command
      include ::ProtocolBuffers::Enum

      set_fully_qualified_name "polar_protocol.PbPFtpOperation.Command"

      GET = 0
      PUT = 1
      MERGE = 2
      REMOVE = 3
    end

    set_fully_qualified_name "polar_protocol.PbPFtpOperation"

    required ::PolarProtocol::PbPFtpOperation::Command, :command, 1
    required :string, :path, 2
  end

  class PbPFtpSetSystemTimeParams < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpSetSystemTimeParams"

    required ::PbDate, :date, 1
    required ::PbTime, :time, 2
    required :bool, :trusted, 3
  end

  class PbPFtpSetLocalTimeParams < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpSetLocalTimeParams"

    required ::PbDate, :date, 1
    required ::PbTime, :time, 2
    optional :int32, :tz_offset, 3
  end

  class PbPFtpGenerateChallengeTokenParams < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpGenerateChallengeTokenParams"

    required :uint32, :user_id, 1
    required :bytes, :nonse, 2
  end

  class PbPFtpSetAdbModeParams < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpSetAdbModeParams"

    required :bool, :enable, 1
  end

  class PbPFtpCleanupDiskSpaceParams < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpCleanupDiskSpaceParams"

    required :uint64, :required_bytes, 1
  end

end
