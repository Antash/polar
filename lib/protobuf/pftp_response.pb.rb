#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'types.pb'; rescue LoadError; end

module PolarProtocol
  # forward declarations
  class PbPFtpEntry < ::ProtocolBuffers::Message; end
  class PbPFtpDirectory < ::ProtocolBuffers::Message; end
  class PbPFtpIdentifyDeviceResult < ::ProtocolBuffers::Message; end
  class PbPFtpGetSystemTimeResult < ::ProtocolBuffers::Message; end
  class PbPFtpGetLocalTimeResult < ::ProtocolBuffers::Message; end
  class PbPFtpDiskSpaceResult < ::ProtocolBuffers::Message; end
  class PbPFtpGenerateChallengeTokenResult < ::ProtocolBuffers::Message; end
  class PbPFtpBatteryStatusResult < ::ProtocolBuffers::Message; end
  class PbPFtpGetInactivityPreAlertResult < ::ProtocolBuffers::Message; end

  class PbPFtpEntry < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpEntry"

    required :string, :name, 1
    required :uint64, :size, 2
    optional ::PbSystemDateTime, :created, 3
    optional ::PbSystemDateTime, :modified, 4
    optional ::PbSystemDateTime, :touched, 5
  end

  class PbPFtpDirectory < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpDirectory"

    repeated ::PolarProtocol::PbPFtpEntry, :entries, 1
  end

  class PbPFtpIdentifyDeviceResult < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpIdentifyDeviceResult"

    required :string, :device_id, 1
  end

  class PbPFtpGetSystemTimeResult < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpGetSystemTimeResult"

    required ::PbDate, :date, 1
    required ::PbTime, :time, 2
    required :bool, :trusted, 3
  end

  class PbPFtpGetLocalTimeResult < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpGetLocalTimeResult"

    required ::PbDate, :date, 1
    required ::PbTime, :time, 2
    optional :int32, :tz_offset, 3
  end

  class PbPFtpDiskSpaceResult < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpDiskSpaceResult"

    required :uint32, :fragment_size, 1
    required :uint64, :total_fragments, 2
    required :uint64, :free_fragments, 3
  end

  class PbPFtpGenerateChallengeTokenResult < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpGenerateChallengeTokenResult"

    required :bytes, :token, 1
  end

  class PbPFtpBatteryStatusResult < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpBatteryStatusResult"

    required :uint32, :battery_status, 1
    optional :bool, :charging, 2
  end

  class PbPFtpGetInactivityPreAlertResult < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_protocol.PbPFtpGetInactivityPreAlertResult"

    required :bool, :inactivity_pre_alert_on, 1
  end

end
