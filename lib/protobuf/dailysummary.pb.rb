#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'types.pb'; rescue LoadError; end

module PolarData
  # forward declarations
  class PbActivityGoalSummary < ::ProtocolBuffers::Message; end
  class PbActivityClassTimes < ::ProtocolBuffers::Message; end
  class PbDailySummary < ::ProtocolBuffers::Message; end

  class PbActivityGoalSummary < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_data.PbActivityGoalSummary"

    required :float, :activity_goal, 1
    required :float, :achieved_activity, 2
    optional ::PbDuration, :time_to_go_up, 3
    optional ::PbDuration, :time_to_go_walk, 4
    optional ::PbDuration, :time_to_go_jog, 5
  end

  class PbActivityClassTimes < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_data.PbActivityClassTimes"

    required ::PbDuration, :time_non_wear, 1
    required ::PbDuration, :time_sleep, 2
    required ::PbDuration, :time_sedentary, 3
    required ::PbDuration, :time_light_activity, 4
    required ::PbDuration, :time_continuous_moderate, 5
    required ::PbDuration, :time_intermittent_moderate, 6
    required ::PbDuration, :time_continuous_vigorous, 7
    required ::PbDuration, :time_intermittent_vigorous, 8
  end

  class PbDailySummary < ::ProtocolBuffers::Message
    set_fully_qualified_name "polar_data.PbDailySummary"

    required ::PbDate, :date, 1
    optional :uint32, :steps, 2
    optional :uint32, :activity_calories, 3
    optional :uint32, :training_calories, 4
    optional :uint32, :bmr_calories, 5
    optional ::PolarData::PbActivityGoalSummary, :activity_goal_summary, 6
    optional ::PolarData::PbActivityClassTimes, :activity_class_times, 7
    optional :float, :activity_distance, 8
  end

end
